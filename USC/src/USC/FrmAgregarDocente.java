/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package USC;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import connections_bd.Conexion;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CesarCuellar
 */
public class FrmAgregarDocente extends javax.swing.JFrame {

    /**
     * Creates new form FrmAgregarDocente
     */
    Conexion cn;
    DefaultTableModel modelo;
    public FrmAgregarDocente() {
        initComponents();
        setLocationRelativeTo(this);
        rsscalelabel.RSScaleLabel.setScaleLabel(Fondo,"src/Recursos/Fondodef.jpg");
        cn = new Conexion();
        cn.conectar();
        modelo = (DefaultTableModel) TablaDocentes.getModel();
        listarDocentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnAgregarDocente = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        Foto = new javax.swing.JLabel();
        btnExportar = new javax.swing.JButton();
        btnAdjuntar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtProfesion = new javax.swing.JTextField();
        txtProvincia = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        cbDepartamento = new javax.swing.JComboBox<>();
        cbSexo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDocentes = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 130));

        btnNuevo.setBackground(new java.awt.Color(204, 153, 255));
        btnNuevo.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton-de-nuevo-documento.png"))); // NOI18N
        btnNuevo.setBorder(null);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnRegresar.setBackground(new java.awt.Color(255, 102, 102));
        btnRegresar.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/REGRE.png"))); // NOI18N
        btnRegresar.setBorder(null);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnAgregarDocente.setBackground(new java.awt.Color(153, 255, 153));
        btnAgregarDocente.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnAgregarDocente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/agregar.png"))); // NOI18N
        btnAgregarDocente.setBorder(null);
        btnAgregarDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDocenteActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(255, 255, 153));
        btnModificar.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton-editar.png"))); // NOI18N
        btnModificar.setBorder(null);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(102, 153, 255));
        btnEliminar.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton-eliminar.png"))); // NOI18N
        btnEliminar.setBorder(null);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        Foto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));

        btnExportar.setBackground(new java.awt.Color(255, 153, 0));
        btnExportar.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/archivo-pdf.png"))); // NOI18N
        btnExportar.setText("Exportar reporte en PDF");
        btnExportar.setBorder(null);
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        btnAdjuntar.setBackground(new java.awt.Color(204, 204, 204));
        btnAdjuntar.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnAdjuntar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/adjuntar.png"))); // NOI18N
        btnAdjuntar.setText("Adjuntar imagen del docente");
        btnAdjuntar.setBorder(null);
        btnAdjuntar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdjuntarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregarDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Foto, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAdjuntar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addComponent(btnExportar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addComponent(btnRegresar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(Foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregarDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdjuntar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 6, 300, 310));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0, 130));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DNI");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 11, -1, -1));

        txtDNI.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txtDNI.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });
        jPanel2.add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 5, 380, 30));

        jLabel6.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nombres");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 47, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Apellidos");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 83, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Profesión");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 119, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Sexo");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 156, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Departamento");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 192, -1, -1));

        jLabel11.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Correo");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 263, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Provincia");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 227, -1, -1));

        txtNombres.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        txtNombres.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });
        jPanel2.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 41, 381, 30));

        txtApellidos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 77, 381, 30));

        txtProfesion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(txtProfesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 113, 381, 30));

        txtProvincia.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(txtProvincia, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 221, 381, 30));

        txtCorreo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 257, 381, 30));

        cbDepartamento.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        cbDepartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amazonas", "Áncash", "Apurímac", "Arequipa", "Ayacucho", "Cajamarca", "Cusco", "Huancavelica", "Huánuco", "Ica", "Junín", "La Libertad", "Lambayeque", "Lima", "Loreto", "Madre de Dios", "Moquegua", "Pasco", "Piura", "Puno", "San Martín", "Tacna", "Tumbes", "Ucayali" }));
        cbDepartamento.setBorder(null);
        cbDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepartamentoActionPerformed(evt);
            }
        });
        jPanel2.add(cbDepartamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 185, 381, 30));

        cbSexo.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        cbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino", "Otro" }));
        cbSexo.setBorder(null);
        cbSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSexoActionPerformed(evt);
            }
        });
        jPanel2.add(cbSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 149, 381, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 473, 310));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TablaDocentes.setBackground(new java.awt.Color(0, 102, 153));
        TablaDocentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DNI", "Nombres", "Apellidos", "Profesión", "Sexo", "Departamento", "Provincia", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaDocentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDocentesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaDocentes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 780, 210));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 807, 542));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 807, 542));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
    FrmMenu vermenu = new FrmMenu();
    vermenu.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed
    
    /**
     * Método qye agrega un docente a la lista de docentes
     * @param evt 
     */
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
    nuevo();
    }//GEN-LAST:event_btnNuevoActionPerformed
    public void Agregar(){
        String DNI = this.txtDNI.getText();
        String Nombres = this.txtNombres.getText();
        String Apellidos = this.txtApellidos.getText();
        String Departamento = this.cbDepartamento.getSelectedItem().toString();
        String Provincia = this.txtProvincia.getText();
        String Profesion = this.txtProfesion.getText();
        String Correo = this.txtCorreo.getText();
        String Sexo = this.cbSexo.getSelectedItem().toString();
        ImageIcon icono = (ImageIcon) Foto.getIcon();
        try {
            if (DNI.equals("") || Nombres.equals("") || Apellidos.equals("") || Departamento.equals("") || Provincia.equals("") || Profesion.equals("") || Correo.equals("") || Sexo.equals("")) {
                JOptionPane.showMessageDialog(null, "Debe Ingresar Datos");
            } else {
                String insertar = "INSERT INTO docentes (id_docente,DNI,Nombres,Apellidos,Profesion,Departamento,Provincia,Correo,Sexo) VALUES (NULL,'" + DNI + "','" + Nombres + "','" + Apellidos + "','" + Profesion + "','" + Departamento + "','" + Provincia + "','" + Correo + "','" + Sexo + "')";
                Statement st = cn.conectar().createStatement();
                int rs = st.executeUpdate(insertar);
                if (rs > 0) {
                    JOptionPane.showMessageDialog(null, "Se agregó al docente correctamente.");
                    limpiarTabla();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo agregar al docente.");
                }
            }
        } catch (Exception e){
            e.printStackTrace();
        }     
    }
        public void listarDocentes(){
        try {
            limpiarTabla();
            String listar = "SELECT * FROM docentes ORDER BY id_docente";
            Statement st = cn.conectar().createStatement();
            ResultSet rs = st.executeQuery(listar);
            Object[] persona = new Object[9];
            modelo = (DefaultTableModel) this.TablaDocentes.getModel();
            while (rs.next()) {
                persona[0] = rs.getString("id_docente");
                persona[1] = rs.getString("DNI");
                persona[2] = rs.getString("Nombres");
                persona[3] = rs.getString("Apellidos");
                persona[4] = rs.getString("Profesion");
                persona[5] = rs.getString("Departamento");
                persona[6] = rs.getString("Provincia");
                persona[7] = rs.getString("Correo");
                persona[8] = rs.getString("Sexo");
                modelo.addRow(persona);
            }
            TablaDocentes.setModel(modelo);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    void limpiarTabla(){
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }
    void Modificar() {
        String rutaIcono = null;
        String DNI = this.txtDNI.getText();
        String Nombres = this.txtNombres.getText();
        String Apellidos = this.txtApellidos.getText();
        String Profesion = this.txtProfesion.getText();
        String Departamento = this.cbDepartamento.getSelectedItem().toString();
        String Provincia = this.txtProvincia.getText();
        String Correo = this.txtCorreo.getText();
        String Sexo = this.cbSexo.getSelectedItem().toString();
        ImageIcon icono = (ImageIcon) Foto.getIcon();
        if (icono != null){
            rutaIcono = icono.getDescription();
        }
        String sql = "UPDATE docentes SET DNI='"+ DNI +"',Nombres='"+Nombres +"', Apellidos='"+Apellidos+"', Profesion='"+Profesion+"',Departamento='"+Departamento+"',Provincia='"+Provincia+"', Correo='"+Correo+"', Sexo='"+Sexo+"', ruta_foto='"+rutaIcono+"' WHERE DNI="+ DNI;
        try {
            if (DNI != null || Nombres != null || Apellidos != null || Profesion != null || Departamento != null || Provincia != null || Correo != null || Sexo != null) {
                Statement st = cn.conectar().createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Docente modificado");
                limpiarTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Error...!!!");
            }
       } catch (Exception e) {
       }
    }
    void Eliminar() {
        String DNI = this.txtDNI.getText();
        String eliminar = "DELETE FROM docentes where DNI=" + DNI;        
        int fila = TablaDocentes.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(null,"Docente no Seleccionado");
        } else {
                try {
                Statement st = cn.conectar().createStatement();
                st.executeUpdate(eliminar);
                JOptionPane.showMessageDialog(null, "Docente Eliminado");
                limpiarTabla();
                }catch(Exception e){
                }  
        }
    }
    void nuevo() {
    txtDNI.setText("");
    txtDNI.requestFocus();
    txtNombres.setText("");
    txtApellidos.setText("");
    txtProfesion.setText("");
    txtProvincia.setText("");
    txtCorreo.setText("");
    cbDepartamento.setSelectedIndex(0);
    cbSexo.setSelectedIndex(0);
    Foto.setIcon(null);
    }
    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresActionPerformed

    private void btnAgregarDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDocenteActionPerformed
    Agregar();
    listarDocentes();
    nuevo();
    }//GEN-LAST:event_btnAgregarDocenteActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
    Modificar(); 
    listarDocentes();
    nuevo();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    Eliminar();
    listarDocentes();
    nuevo();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void TablaDocentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDocentesMouseClicked
    int row = TablaDocentes.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "No se seleccionó");
        }else{
            String DNI = (String) TablaDocentes.getValueAt(row, 1);
            try{
            String foto = "SELECT ruta_foto FROM alumnos WHERE DNI="+DNI;
            Statement st = cn.conectar().createStatement();
            ResultSet rs = st.executeQuery(foto);
            }catch(SQLException e)
            {
            }
            String Nombres = (String) TablaDocentes.getValueAt(row, 2);
            String Apellidos = (String) TablaDocentes.getValueAt(row, 3);
            String Profesion = (String) TablaDocentes.getValueAt(row, 4);
            String Departamento = (String) TablaDocentes.getValueAt(row, 5);
            String Provincia = (String) TablaDocentes.getValueAt(row, 6);
            String Correo = (String) TablaDocentes.getValueAt(row, 7);
            String Sexo = (String) TablaDocentes.getValueAt(row, 8);
            txtDNI.setText(DNI);
            txtNombres.setText(Nombres);
            txtApellidos.setText(Apellidos);
            txtProfesion.setText(Profesion);
            cbDepartamento.setSelectedItem(Departamento);
            txtProvincia.setText(Provincia);
            txtCorreo.setText(Correo);
            cbSexo.setSelectedItem(Sexo);
        }
    }//GEN-LAST:event_TablaDocentesMouseClicked

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
    Document documento = new Document(PageSize.A4.rotate());
    try{
        String ruta = System.getProperty("user.home");
        PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/Reporte Profesores.pdf"));
        Paragraph parrafo = new Paragraph();
        parrafo.setAlignment(Chunk.ALIGN_CENTER);
        parrafo.setFont(FontFactory.getFont("Tahoma",14,Font.BOLD,BaseColor.DARK_GRAY));
        parrafo.add("Reporte de Docentes \n\n");
        
        documento.open();
        
        documento.add(parrafo);
        
        //Crear una tabla
        PdfPTable tabla = new PdfPTable(9);
        
        tabla.setWidthPercentage(100); // Ancho de la tabla en porcentaje del ancho de la página
        tabla.setSpacingBefore(10f); // Espaciado antes de la tabla
        tabla.setSpacingAfter(10f); // Espaciado después de la tabla
        
        // Crear una fuente
        Font font = FontFactory.getFont(FontFactory.HELVETICA, 9, Font.NORMAL);
        Font headerfont = FontFactory.getFont(FontFactory.HELVETICA, 10);

        // Definir los anchos relativos de las columnas
        float[] columnWidths = {1f, 2f, 3f, 3f, 3f, 2f, 3f, 3f, 3f};
        tabla.setWidths(columnWidths);
        
        // Array con los encabezados
        String[] encabezados = {"ID", "DNI", "Nombres", "Apellidos","Profesión", "Departamento", "Provincia", "Correo", "Sexo"};
        
        // Añadir encabezados a la tabla
        for (String encabezado : encabezados) {
            PdfPCell celda = new PdfPCell(new Paragraph(encabezado, headerfont));
            celda.setHorizontalAlignment(Element.ALIGN_CENTER); // Alinea la celda
            tabla.addCell(celda); // Añade la celda a la tabla
        }
        
        // Conectar a la base de datos
        try{
          String pdf = "SELECT * FROM alumnos";
          Statement st = cn.conectar().createStatement();
          ResultSet rs = st.executeQuery(pdf);
          if(rs.next()){
              do
              {
                // Añadir los datos del ResultSet a la tabla
                for (int i = 1; i <= 9; i++){
                    PdfPCell celda = new PdfPCell(new Paragraph(rs.getString(i), font));
                    celda.setHorizontalAlignment(Element.ALIGN_CENTER);
                    tabla.addCell(celda);
                }
              }while(rs.next());
              //Añadir la tabla
              documento.add(tabla);
          }
        }catch(DocumentException | SQLException e){
        }
        documento.close();
        JOptionPane.showMessageDialog(null,"Reporte creado");
    }catch(DocumentException | HeadlessException | FileNotFoundException e){
    }
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnAdjuntarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdjuntarActionPerformed

    }//GEN-LAST:event_btnAdjuntarActionPerformed

    private void cbSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSexoActionPerformed

    private void cbDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepartamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDepartamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAgregarDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAgregarDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAgregarDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAgregarDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAgregarDocente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel Foto;
    private javax.swing.JTable TablaDocentes;
    private javax.swing.JButton btnAdjuntar;
    private javax.swing.JButton btnAgregarDocente;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbDepartamento;
    private javax.swing.JComboBox<String> cbSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtProfesion;
    private javax.swing.JTextField txtProvincia;
    // End of variables declaration//GEN-END:variables
}
